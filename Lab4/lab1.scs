geometrical_problem <- sc_node_class;;

geometrical_problem -> problem_1(* -> [*

triangle <- sc_node_class;;
isosceles_triangle <- sc_node_class;;
line_segment <- sc_node_class;;
square <- sc_node_class;;
circle <- sc_node_class;;
length <- sc_node_class;;
exact_value <- sc_node_class;;

..node1 <- sc_node_class;;
..node2 <- sc_node_class;;
..node3 <- sc_node_class;;

..tuple <- sc_node_tuple;;

nrel_base <- sc_node_norole_relation;;
nrel_geometrical_side <- sc_node_norole_relation;;
nrel_lateral_side <- sc_node_norole_relation;;
nrel_height <- sc_node_norole_relation;;
nrel_inscribed <- sc_node_norole_relation;;



triangle => nrel_inclusion: isosceles_triangle(* -> TriangleABC;;*);;
triangle -> TriangleBDC;;
TriangleBDC => nrel_geometrical_side:DC;BC;BD;;
line_segment -> BC;AC;BD;DC;AB;;
exact_value -> ..node1;;
length -> ..node1;;
..node1 -> BC;AB;;
TriangleABC => nrel_lateral_side:AB;BC;;
..node1 => nrel_measurment:6 (* <- number;; *);;
..node1 <- exact_value;;
..node1 <- length;;
TriangleBDC => nrel_geometrical_side:DC;BC;;
square -> ..node2;;
..node2 <- exact_value;;
..node2 => nrel_measurment: S;;
S <- number;;
number -> 1;;
..node3 => nrel_measurment : 1;;
length -> ..node3;;
..node3 <- exact_value;;
..node3 -> ..node4;;
circle -> ..node5(* => nrel_radius: ..node4;;*);;
..node5 => nrel_inscribed: TriangleBDC;;
..tuple -> AC;BD;;
..tuple => nrel_intersection : ..dot(* -> D;; *);;
TriangleABC => nrel_base: AC;;
..node2 <- square;;
..node2 <- exact_value;;
..node2 -> TriangleABC;;
BD => nrel_height: TriangleABC;;
TriangleABC => nrel_base: AC;;

*];; *);;

//Запихнуть задачу в структуру + поменять возможные идентификаторы на уже созданные
